#!/usr/bin/env bash
#
# Desktop Kubernetes CLI.
#

set -e

export DTKBASE="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
export DTKVER=v1.34.1-1

# set from the command line by parse_cmdline function (defaults are hard-coded)
operation=
config=$DTKBASE/config.yaml
create_template=
create_vms=1
addon=

# set from config.yaml by scripts/helpers/parse-config.py
virt=
k8s_containerized_cplane=
k8s_cluster_cidr=
k8s_cluster_dns=
k8s_kube_proxy=
kvm_network=
kvm_kickstart=
kvm_os_variant=
vbox_host_network_interface=
vbox_host_only_network=
vbox_kickstart=
vbox_vboxdir=
vm_linux=
vm_create_template=
vm_template_vmname=

# entry point

# read in functions used only by this script
source $DTKBASE/scripts/helpers/dtk-helpers

# parse the command line
parse_cmdline "$@"

# ensure configuration file exists and parses
validate_config_file

# read the config file and set vars above
eval $(scripts/helpers/parse-config.py $config)

# sanity check configuration settings
validate_config_values

# allow the command line to override configuration file settings
set_cmdline_overrides

# set component versions and urls
set -a && source $DTKBASE/artifacts && set +a

case $operation in
  help)
    xec show-usage
    ;;
  cluster-create)
    xec create-cluster\
      --admin-kubeconfig=$DTKBASE/generated/kubeconfig/admin.kubeconfig\
      --ca-cert=$DTKBASE/generated/cert/ca.pem\
      --ca-key=$DTKBASE/generated/cert/ca-key.pem\
      --cluster-cidr=$k8s_cluster_cidr\
      --config=$config\
      --containerized-cplane=$k8s_containerized_cplane\
      --create-template=$vm_create_template\
      --create-vms=$create_vms\
      --host-network-interface=$vbox_host_network_interface\
      --host-only-network=$vbox_host_only_network\
      --kube-proxy-enabled=$k8s_kube_proxy\
      --linux=$vm_linux\
      --os-variant=$kvm_os_variant\
      --priv-key=$DTKBASE/generated/kickstart/id_ed25519\
      --template-vmname=$vm_template_vmname\
      --vboxdir=$vbox_vboxdir\
      --virt=$virt
    ;;
  cluster-delete)
    echo HERE
    xec $virt/up-down-del del $config
    ;;
  cluster-up)
     xec $virt/up-down-del up $config
    ;;
  cluster-down)
    xec $virt/up-down-del down $config
    ;;
  install-addon)
    xec install-addons\
      --addon=$addon\
      --admin-kubeconfig=$DTKBASE/generated/kubeconfig/admin.kubeconfig\
      --config=$config\
      --priv-key=$DTKBASE/generated/kickstart/id_ed25519
    ;;
  verify-upstreams)
    xec check-objects upstreams
    ;;
  verify-files)
    xec check-objects files
    ;;
  check-tools)
    xec check-compatibility
    ;;
  version)
    echo "Desktop Kubernetes version: $DTKVER (Mon Oct 20 2025)"
    ;;
  *)
    echo "unsupported operation: $operation (should never happen)"
    ;;
esac
