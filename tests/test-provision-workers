#!/usr/bin/env bash

#
# Provisions two workers. Requires that the controller VM be successfully configured and running. Needs the
# controller VM name in arg one (expects the VBox VM name to be identical to the OS hostname). Best way to run
# this is immediately after running 'tests/test-provision-controller'. Then the CA, and cluster certs will
# be initialized on the filesystem and consistent for use by the worker configuration scripts.
#

set -e

controller_vmname="$1"

if [[ -z ""$controller_vmname"" ]]; then
  echo "need a controller VM name in arg one"
  exit 1
fi

proj_root="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"

controller_ip=$($proj_root/scripts/get-vm-ip $controller_vmname)

# bridged. Append octet to --worker opts and populate host-only-network for host only and NAT
$proj_root/toplevel-scripts/provision-workers\
 --worker=ham,4096,2,20000,10.200.1.0/24\
 --worker=monk,8192,3,20000,10.200.2.0/24\
 --host-only-network=\
 --controller-ip=$controller_ip\
 --controller-hostname=$controller_vmname\
 --template-vmname=bingo\
 --vboxdir=/sdb1/virtualbox\
 --priv-key=$proj_root/kickstart/id_ed25519\
 --crictl-download=\
 --crictl-binary=$proj_root/binaries/crictl-v1.22.0-linux-amd64.tar.gz\
 --runc-download=\
 --runc-binary=$proj_root/binaries/runc\
 --cni-plugins-download=\
 --cni-plugins-binary=$proj_root/binaries/cni-plugins-linux-amd64-v1.1.0.tgz\
 --containerd-download=\
 --containerd-binary=$proj_root/binaries/containerd-1.6.4-linux-amd64.tar.gz\
 --kubelet-download=\
 --kubelet-binary=$proj_root/binaries/kubelet\
 --node-labels=worker\
 --ca-cert=$proj_root/tls/ca.pem\
 --ca-key=$proj_root/tls/ca-key.pem
