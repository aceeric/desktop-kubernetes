#!/usr/bin/env bash
#
# tests configuring the controller as a worker too
#

proj_root="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
worker_hostname=deleteme
vmname=deleteme
ca_cert=$proj_root/tls/ca.pem
ca_key=$proj_root/tls/ca.pem
priv_key=$proj_root/kickstart/id_ed25519
host_only_network="192.168.56"
host_only_octet="10"

$proj_root/scripts/clone-vm\
 --priv-key=$proj_root/kickstart/id_ed25519\
 --template-vmname=bingo\
 --clone-vmname=$vmname\
 --clone-ram=2048\
 --clone-cpu=1\
 --host-only-network=$host_only_network\
 --host-only-octet=$host_only_octet\
 --vboxdir=/sdb1/virtualboxvms\
 --shutdown=false

worker_ip=$($proj_root/scripts/get-vm-ip $worker_hostname)

echo "configure worker"
ssh -i $priv_key root@$worker_ip << EOF
  yum -y install socat conntrack ipset
  [[ -z "$(swapon --show)" ]] || { swapoff -a; sed -i '/ swap /d' /etc/fstab; }
EOF

echo "gen worker tls"
$proj_root/scripts/gen-worker-tls\
  --worker-ip=$worker_ip\
  --worker-hostname=$worker_hostname\
  --ca-cert=$ca_cert\
  --ca-key=$ca_key

crictl_download=https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.24.0/crictl-v1.24.0-linux-amd64.tar.gz
crictl_binary=$proj_root/binaries/crictl-v1.24.0-linux-amd64.tar.gz
runc_download=https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64
unc_binary=$proj_root/binaries/runc
cni_plugins_download=https://github.com/containernetworking/plugins/releases/download/v1.1.0/cni-plugins-linux-amd64-v1.1.0.tgz
cni_plugins_binary=$proj_root/binaries/cni-plugins-linux-amd64-v1.1.0.tgz

echo "Copying misc. binaries to the worker"
$proj_root/worker/misc/install-misc-bins\
 --priv-key=$priv_key\
 --worker-ip=$worker_ip\
 --crictl-download=$crictl_download\
 --crictl-binary=$crictl_binary\
 --runc-download=$runc_download\
 --runc-binary=$runc_binary\
 --cni-plugins-download=$cni_plugins_download\
 --cni-plugins-binary=$cni_plugins_binary

containerd_download=https://github.com/containerd/containerd/releases/download/v1.6.4/containerd-1.6.4-linux-amd64.tar.gz
containerd_binary=$proj_root/binaries/containerd-1.6.4-linux-amd64.tar.gz

echo "Installing containerd"
$proj_root/worker/containerd/install-containerd\
 --priv-key=$priv_key\
 --worker-ip=$worker_ip\
 --containerd-download=$containerd_download\
 --containerd-binary=$containerd_binary

# if success, then:
#   1) scripts/sshto deleteme
#   2) ctr images pull docker.io/library/nginx:1.21
#
# should successfully pull the image to the VM