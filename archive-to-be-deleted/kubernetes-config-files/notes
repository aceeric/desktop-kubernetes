## generate kubeconfig files for
## - the controller manager
## - kubelet
## - kube-proxy
## - scheduler clients
## - TODO admin user

CONTROLLER_IP=192.168.0.46
PROJROOT=/home/eace/k8sbyhand

# Generate a kubeconfig file for the kube-controller-manager service
# -----------------------------------------------------
kubectl config set-cluster kubernetes \
--certificate-authority=$PROJROOT/tls/ca.pem \
--embed-certs=true \
--server=https://$CONTROLLER_IP:6443 \
--kubeconfig=./kube-controller-manager.kubeconfig

kubectl config set-credentials system:kube-controller-manager \
--client-certificate=$PROJROOT/tls/kube-controller-manager.pem \
--client-key=$PROJROOT/tls/kube-controller-manager-key.pem \
--embed-certs=true \
--kubeconfig=./kube-controller-manager.kubeconfig

kubectl config set-context default \
--cluster=kubernetes \
--user=system:kube-controller-manager \
--kubeconfig=./kube-controller-manager.kubeconfig

kubectl config use-context default --kubeconfig=./kube-controller-manager.kubeconfig

# Generate a kubeconfig file for the kube-scheduler service
# -----------------------------------------------------
kubectl config set-cluster kubernetes \
--certificate-authority=$PROJROOT/tls/ca.pem \
--embed-certs=true \
--server=https://$CONTROLLER_IP:6443 \
--kubeconfig=./kube-scheduler.kubeconfig

kubectl config set-credentials system:kube-scheduler \
--client-certificate=$PROJROOT/tls/kube-scheduler.pem \
--client-key=$PROJROOT/tls/kube-scheduler-key.pem \
--embed-certs=true \
--kubeconfig=./kube-scheduler.kubeconfig

kubectl config set-context default \
--cluster=kubernetes \
--user=system:kube-scheduler \
--kubeconfig=./kube-scheduler.kubeconfig

kubectl config use-context default --kubeconfig=./kube-scheduler.kubeconfig

# Generate a kubeconfig file for the kube-proxy service
# -----------------------------------------------------
kubectl config set-cluster kubernetes \
--certificate-authority=$PROJROOT/tls/ca.pem \
--embed-certs=true \
--server=https://$CONTROLLER_IP:6443 \
--kubeconfig=./kube-proxy.kubeconfig

kubectl config set-credentials system:kube-proxy \
--client-certificate=$PROJROOT/tls/kube-proxy.pem \
--client-key=$PROJROOT/tls/kube-proxy-key.pem \
--embed-certs=true \
--kubeconfig=./kube-proxy.kubeconfig

kubectl config set-context default \
--cluster=kubernetes \
--user=system:kube-proxy \
--kubeconfig=./kube-proxy.kubeconfig

kubectl config use-context default --kubeconfig=./kube-proxy.kubeconfig

# Generate a kubeconfig file for the admin user (kubectl CLI)
# -----------------------------------------------------
kubectl config set-cluster kubernetes \
--certificate-authority=$PROJROOT/tls/ca.pem \
--embed-certs=true \
--server=https://$CONTROLLER_IP:6443 \
--kubeconfig=./admin.kubeconfig

kubectl config set-credentials admin \
--client-certificate=$PROJROOT/tls/admin.pem \
--client-key=$PROJROOT/tls/admin-key.pem \
--embed-certs=true \
--kubeconfig=./admin.kubeconfig

kubectl config set-context default \
--cluster=kubernetes \
--user=admin \
--kubeconfig=./admin.kubeconfig

kubectl config use-context default --kubeconfig=./admin.kubeconfig



# Generate a kubeconfig file for the kubelet
# -----------------------------------------------------
## TODO e.g. workernodenamewhateveritis.kubeconfig

## Distribute the Controller Configuration Files

## TODO kube-controller-manager.kubeconfig should not be in two places
for f in admin.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig; do\
  scp -i $PROJROOT/servers/id_rsa $f root@192.168.0.46:/root/kubernetes; \
done

## Distribute the Worker Configuration Files
## TODO
## - kubelet: workernodenamewhateveritis.kubeconfig
## - kube-proxy.kubeconfig
