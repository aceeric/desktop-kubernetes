#!/usr/bin/env bash
#
# Clones a template VM into a clone VM for testing Linux configuration
# changes, manual Kubernetes component installs, etc.
#

if [[ -z "$DTKBASE" ]]; then
  echo 'requires environment variable DTKBASE. E.g.: export DTKBASE=~/projects/desktop-kubernetes'
  exit 0
fi

if [[ "$#" -ne 5 ]]; then
  echo "Usage:"
  echo "E.g.:"
  echo "hack/scripts/create-clone-vm --host-only-network 192.168.56.120 my-template-vm my-clone /sdb1/virtualboxvms"
  echo "...or..."
  echo "hack/scripts/create-clone-vm --host-network-interface enp0s31f6 my-template-vm my-clone /sdb1/virtualboxvms"
  exit 1
fi

HOSTONLY=
HNI=
for arg; do
  if [[ "$arg" == "--host-only-network" ]]; then
    shift
    HOSTONLY=$1
  fi
  if [[ "$arg" == "--host-network-interface" ]]; then
    shift
    HNI=$1
  fi
done

if ! type -f xec &>/dev/null; then
  function xec() { f=$(find $DTKBASE/scripts -name $1) && $f "${@:2}"; }
  export -f xec
fi

# Clone template VM in arg 1 into VM "scratch"

if [[ ! -z "$HOSTONLY" ]]; then
  xec clone-vm\
   --priv-key=$DTKBASE/generated/kickstart/id_ed25519\
   --template-vmname=$2\
   --clone-vmname=$3\
   --clone-ram=4096\
   --clone-cpu=2\
   --host-only-network=$(echo $HOSTONLY | cut -d. -f1-3)\
   --host-only-octet=$(echo $HOSTONLY | cut -d. -f4)\
   --vboxdir=$4\
   --shutdown=false
elif [[ ! -z "$HNI" ]]; then
  xec clone-vm\
   --priv-key=$DTKBASE/generated/kickstart/id_ed25519\
   --template-vmname=$2\
   --clone-vmname=$3\
   --clone-ram=4096\
   --clone-cpu=2\
   --vboxdir=$4\
   --shutdown=false
else
  echo "couldn't parse args"
fi


# Configure etc/hosts in the VM

xec configure-etc-hosts $DTKBASE/generated/kickstart/id_ed25519 $3

# Display to the console how to ssh into the VM

xec show-ssh $DTKBASE/generated/kickstart/id_ed25519 $3
