#!/usr/bin/env bash

set -e

long_opts=priv-key:,worker-ip:,containerd-download:,containerd-binary:
script_name=$(basename "$0")
proj_root="$(cd "$(dirname "${BASH_SOURCE[0]}")/../.." && pwd)"

priv_key=
worker_ip=
containerd_download=
containerd_binary=

function opt_val() {
  opt="$1"
  if [[ "$opt" == =* ]]; then
    echo "${opt:1}"
  else
    echo "$opt"
  fi
}

function parse_args() {
  if [[ "$#" -eq 0 ]]; then
    echo "no args provided"
    exit 1
  fi
  local parsed
  parsed=$(getopt --options "" --longoptions $long_opts -n $script_name -- "$@")
  eval set -- "$parsed"
  while true; do
    case "$1" in
      --priv-key)
        priv_key=$(opt_val "$2")
        shift 2
        ;;
      --worker-ip)
        worker_ip=$(opt_val "$2")
        shift 2
        ;;
      --containerd-download)
        containerd_download=$(opt_val "$2")
        shift 2
        ;;
      --containerd-binary)
        containerd_binary=$(opt_val "$2")
        shift 2
        ;;
      --)
        shift
        break
        ;;
    esac
  done
}

parse_args "$@"

containerd_binary_actual=$($proj_root/scripts/make-download-path\
 --download-url=$containerd_download --download-path=$containerd_binary)

# debug
#echo "priv_key=$priv_key"
#echo "worker_ip=$worker_ip"
#echo "containerd_download=$containerd_download"
#echo "containerd_binary=$containerd_binary"
#echo "containerd_binary_actual=$containerd_binary_actual"

$proj_root/scripts/download-obj --url="$containerd_download" --dest="$containerd_binary_actual"

echo "Copying containerd binary to worker"
cat $containerd_binary_actual | ssh -i $priv_key root@$worker_ip\
 "tar zxvf - --strip-components 1 --no-same-owner -C /bin/ bin"

echo "Copying containerd service and toml files to worker VM"
scp -i $priv_key $proj_root/worker/containerd/containerd.service root@$worker_ip:/etc/systemd/system/

ssh -i "$priv_key" root@$worker_ip "mkdir -p /etc/containerd"
# this TOML produced by 'containerd config default > containerd-config.toml' AFTER containerd installed,
# then copy back into this project plus tweak cgroup:
scp -i $priv_key $proj_root/worker/containerd/containerd-config.toml root@$worker_ip:/etc/containerd

# July 2022 per https://kubernetes.io/docs/setup/production-environment/container-runtimes/
echo "Configuring networking"
ssh -i $priv_key root@$worker_ip << EOF
  echo overlay > /etc/modules-load.d/k8s.conf
  echo br_netfilter >> /etc/modules-load.d/k8s.conf

  modprobe overlay
  modprobe br_netfilter

  echo net.bridge.bridge-nf-call-iptables  = 1 >> /etc/sysctl.d/k8s.conf
  echo net.bridge.bridge-nf-call-ip6tables = 1 >> /etc/sysctl.d/k8s.conf
  echo net.ipv4.ip_forward                 = 1 >> /etc/sysctl.d/k8s.conf

  sysctl --system
EOF

# 10-containerd-net.conflist based on, with mods:
# https://kubernetes.io/docs/tasks/administer-cluster/migrating-from-dockershim/troubleshooting-cni-plugin-related-errors/
# and:
# https://github.com/containerd/containerd/blob/main/script/setup/install-cni
echo "Copying 10-containerd-net.conflist to /etc/cni/net.d/"
ssh -i "$priv_key" root@$worker_ip "mkdir -p /etc/cni/net.d"
scp -i $priv_key $proj_root/worker/containerd/10-containerd-net.conflist root@$worker_ip:/etc/cni/net.d/

echo "Starting containerd service"
ssh -i "$priv_key" root@$worker_ip "systemctl daemon-reload && systemctl enable containerd && systemctl start containerd"

echo "Verifying containerd is running"
set +e
for i in {1..10}; do
  ssh -i "$priv_key" root@$worker_ip "systemctl is-active --quiet containerd" && break
  sleep 1s
done

echo "No errors detected with containerd installation"

