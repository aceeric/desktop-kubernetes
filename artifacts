# Change versions here and they will propagate throughout the project

ALMA_VER=9.3
CNI_PLUGINS_VER=v1.4.0
CONTAINERD_VER=1.7.13
CRICTL_VER=v1.29.0
ETCD_VER=v3.5.12
GUEST_ADDITIONS_VER=7.0.8
K8S_VER=v1.29.2
ROCKY_VER=9.3
RUNC_VER=v1.1.12

# These are the items used to provision the cluster

ALMA_ISO_DOWNLOAD=https://repo.almalinux.org/almalinux/$ALMA_VER/isos/x86_64/AlmaLinux-$ALMA_VER-x86_64-dvd.iso
ALMA_ISO_FILE=$DTKBASE/binaries/AlmaLinux-$ALMA_VER-x86_64-dvd.iso
CENTOS8_ISO_DOWNLOAD=https://mirror.umd.edu/centos/8-stream/isos/x86_64/CentOS-Stream-8-x86_64-latest-dvd1.iso
CENTOS8_ISO_FILE=$DTKBASE/binaries/CentOS-Stream-8-x86_64-latest-dvd1.iso
CENTOS9_ISO_DOWNLOAD="https://mirrors.centos.org/mirrorlist?path=/9-stream/BaseOS/x86_64/iso/CentOS-Stream-9-latest-x86_64-dvd1.iso&redirect=1&protocol=https"
CENTOS9_ISO_FILE=$DTKBASE/binaries/CentOS-Stream-9-latest-x86_64-dvd1.iso
CNI_PLUGINS_BINARY=$DTKBASE/binaries/cni-plugins-linux-amd64-$CNI_PLUGINS_VER.tgz
CNI_PLUGINS_DOWNLOAD=https://github.com/containernetworking/plugins/releases/download/$CNI_PLUGINS_VER/cni-plugins-linux-amd64-$CNI_PLUGINS_VER.tgz
CONTAINERD_BINARY=$DTKBASE/binaries/containerd-v$CONTAINERD_VER-linux-amd64.tar.gz
CONTAINERD_DOWNLOAD=https://github.com/containerd/containerd/releases/download/v$CONTAINERD_VER/containerd-$CONTAINERD_VER-linux-amd64.tar.gz
CRICTL_BINARY=$DTKBASE/binaries/crictl-$CRICTL_VER-linux-amd64.tar.gz
CRICTL_DOWNLOAD=https://github.com/kubernetes-sigs/cri-tools/releases/download/$CRICTL_VER/crictl-$CRICTL_VER-linux-amd64.tar.gz
ETCD_DOWNLOAD=https://github.com/etcd-io/etcd/releases/download/$ETCD_VER/etcd-$ETCD_VER-linux-amd64.tar.gz
ETCD_GZIP=$DTKBASE/binaries/etcd-$ETCD_VER-linux-amd64.tar.gz
GUEST_ADDITIONS_ISO_DOWNLOAD=https://download.virtualbox.org/virtualbox/$GUEST_ADDITIONS_VER/VBoxGuestAdditions_$GUEST_ADDITIONS_VER.iso
GUEST_ADDITIONS_ISO_FILE=$DTKBASE/binaries/VBoxGuestAdditions_$GUEST_ADDITIONS_VER.iso
KUBE_APISERVER_BINARY=$DTKBASE/binaries/kube-apiserver-$K8S_VER
KUBE_APISERVER_DOWNLOAD=https://dl.k8s.io/$K8S_VER/bin/linux/amd64/kube-apiserver
KUBE_CONTROLLER_MANAGER_BINARY=$DTKBASE/binaries/kube-controller-manager-$K8S_VER
KUBE_CONTROLLER_MANAGER_DOWNLOAD=https://dl.k8s.io/$K8S_VER/bin/linux/amd64/kube-controller-manager
KUBELET_BINARY=$DTKBASE/binaries/kubelet-$K8S_VER
KUBELET_DOWNLOAD=https://dl.k8s.io/$K8S_VER/bin/linux/amd64/kubelet
KUBE_PROXY_BINARY=$DTKBASE/binaries/kube-proxy-$K8S_VER
KUBE_PROXY_DOWNLOAD=https://dl.k8s.io/$K8S_VER/bin/linux/amd64/kube-proxy
KUBE_SCHEDULER_BINARY=$DTKBASE/binaries/kube-scheduler-$K8S_VER
KUBE_SCHEDULER_DOWNLOAD=https://dl.k8s.io/$K8S_VER/bin/linux/amd64/kube-scheduler
ROCKY_ISO_DOWNLOAD=https://download.rockylinux.org/pub/rocky/${ROCKY_VER%%\.*}/isos/x86_64/Rocky-$ROCKY_VER-x86_64-dvd.iso
ROCKY_ISO_FILE=$DTKBASE/binaries/Rocky-$ROCKY_VER-x86_64-dvd.iso
RUNC_BINARY=$DTKBASE/binaries/runc-$RUNC_VER
RUNC_DOWNLOAD=https://github.com/opencontainers/runc/releases/download/$RUNC_VER/runc.amd64
