#!/usr/bin/env bash

# Creates a clone VM from the passed template VM. The cloned VM will have the passed
# characteristics (VM name, mem, disk size). Unless shutdown=false, the VM will be shut down after it
# is created. The host name of the VM will be set to the same value as the VM name. The clone_ram arg
# is interpreted as kilobytes.

set -e

long_opts=priv-key:,template-vmname:,clone-vmname:,clone-ram:,clone-cpus:,\
host-only-network:,host-only-octet:,vboxdir:,shutdown:
script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

priv_key=
template_vmname=
clone_vmname=
clone_ram=
clone_cpus=
host_only_network=
host_only_octet=
vboxdir=
shutdown=true

if ! parsed=$(xec parseargs $long_opts "$@"); then
  echo "$parsed"
  exit 1
fi
eval $(echo -e "$parsed")

echo "cloning VM \"$clone_vmname\" from template VM \"$template_vmname\""
VBoxManage clonevm $template_vmname\
 --basefolder="$vboxdir"\
 --mode=machine\
 --name=$clone_vmname\
 --register

if [[ ! -z $host_only_network ]]; then
  echo "configure hostonly networking"
  sleep 10s && $script_dir/configure-hostonly-networking $clone_vmname $host_only_network $host_only_octet $clone_vmname
fi

echo "setting VM characteristics"
sleep 10s && VBoxManage modifyvm $clone_vmname --cpus $clone_cpus --memory $clone_ram

# this script section clears the IP address guest property after the cloned VM starts. What I experienced was - if
# I started the template (i.e. for troubleshooting), it would pick up an IP address property and the clone would
# have the same property value (the clone would appear to have the same IP address as the template for some period
# of time until VirtualBox assigned a new one.) So this is a work-around. After clearing the IP address property,
# a subsequent call to 'guestproperty get' blocks until VirtualBox gets around to assigning it a new IP address.
# Since the project can configure bridged networking with one adaptor - or host only + NAT with two adaptors,
# the script clears two addresses and ignores any errors.

echo "starting cloned VM"
sleep 10s && VBoxManage startvm $clone_vmname
$script_dir/wait-vm $clone_vmname --started

echo "clearing existing IP address"
VBoxManage guestproperty delete $clone_vmname "/VirtualBox/GuestInfo/Net/0/V4/IP" || :
VBoxManage guestproperty delete $clone_vmname "/VirtualBox/GuestInfo/Net/1/V4/IP" || :

echo "waiting for VM IP assignment - $host_only_network.$host_only_octet"
while true; do
  clone_ip=$(xec get-vbox-ip $clone_vmname)
  if [[ $clone_ip == "$host_only_network.$host_only_octet" ]]; then
    break
  fi
  sleep 3s
done

# this will be the very first occurrence of SSH'ing into the VM

echo "setting the hostname for cloned VM"
ssh-keygen -f ~/.ssh/known_hosts -R $clone_ip
ssh -o "StrictHostKeyChecking no" -i $priv_key root@$clone_ip "hostnamectl set-hostname $clone_vmname"

if [[ $shutdown == true ]]; then
  echo "shutting down cloned VM"
  sleep 10s && VBoxManage controlvm $clone_vmname acpipowerbutton
  $script_dir/wait-vm $clone_vmname --stopped
  sleep 10s
fi

echo "done cloning \"$clone_vmname\""
