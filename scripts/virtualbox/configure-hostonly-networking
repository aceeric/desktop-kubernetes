#!/usr/bin/env bash

# Configures host only networking for the passed VM. Does this by calling 'gen-hostonly-ifcfg-iso' to create
# an ISO containing a network config file. Mounts the ISO to the VM and starts the VM. The presence of this
# ISO is detected by the desktop-kubernetes systemd service which copies it to /etc/sysconfig/network-scripts
# in the VM. So this is how we configure each node in the cluster with a unique static IP address in the
# host only network.
#
# The interface is named enp0s8 because the way this project works - for host only networking - a NAT interface is
# configured in network position one, and the host only interface takes position two. As a result, the host only
# network will pick up the name enp0s8. See https://forums.virtualbox.org/viewtopic.php?f=7&t=103195. Snip:
#
# "VirtualBox can emulate two chipsets: PIIX3 and ICH9 (see System > Motherboard > Chipset). Depending on the chipset,
# VirtualBox defines the layout of the virtual PCI busses that are provided to the guest. When using the PIIX3 chipset
# (default), the first four network adapters are devices 3, 8, 9 and 10 on PCI bus 0. On most modern Linux
# distributions, the network adapters are enumerated on the PCI busses and named enp0s3, enp0s8, enp0s9
# and enp0s10 accordingly. ... In consequence, the naming is indeed deterministic and predictable."
#
# The NAT interface is used for external access for the VM (i.e. internet) and the host only network implements the
# k8s cluster network.
#
# Usage: configure-hostonly-networking <vmname> <network octets> <host octet> <vmname>
#
# ...where <network octets> are the left three octets of an IPv4 address, and <host octet> is the right-most
# octet of the IP address to configure the adaptor with. E.g.:
#
# configure-hostonly-networking 200.200.200 202 my-cloned-vm
#

set -e

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

vmname="$1"
network_octets="$2"
host_octet="$3"
clone_vmname="$4"

# create ifcfg ISO with IP Address from passed args
echo "creating ifcfg-enp0s8.iso with network $network_octets and octet $host_octet"
$script_dir/gen-hostonly-ifcfg-iso $network_octets $host_octet

# mount ISO to VM
echo "attaching ifcfg-enp0s8 ISO to VM $vmname"
sleep 5s && VBoxManage storageattach $vmname --storagectl IDE --port 0 --device 0 --type dvddrive\
 --medium $DTKBASE/generated/iso/ifcfg-enp0s8.iso

# start VM - this will cause the desktop-kubernetes systemd service to copy the config file 'ifcfg-enp0s8' from
# the ISO to the /etc/sysconfig/network-scripts directory in the guest which configures network interface. See
# 'scripts/os/desktop-kubernetes.sh'
echo "starting VM $vmname"
VBoxManage startvm $vmname

echo "waiting indefinitely for VM IP assignment"
while true; do
  clone_ip=$(xec get-vbox-ip $clone_vmname)
  if [[ $clone_ip == "$network_octets.$host_octet" ]]; then
    break
  fi
  sleep 3s
done

echo "stopping VM $vmname"
VBoxManage controlvm $vmname acpipowerbutton

# unmount
echo "VM $vmname stopped - detaching ifcfg-enp0s8 ISO"

sleep 10s && VBoxManage storageattach $vmname --storagectl IDE --port 0 --device 0 --medium none
