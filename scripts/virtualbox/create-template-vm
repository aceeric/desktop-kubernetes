#!/usr/bin/env bash

#
# Creates a template VM suitable to clone into a cluster VM. Specifically:
#
# 1. *may* generate SSH key pair into the 'generated/kickstart' directory to support SSH access to the VM
# 2. generates the kickstart ISO into the 'generated/iso' directory
# 3. creates a VM from the passed Linux ISO and generated kickstart ISO
# 4. installs guest additions from the passed ISO to support other scripts getting the IP address from the VM
#

set -e

long_opts=template-vmname:,linux-iso-path:,guest-additions-path:,host-network-interface:,host-only-network:,vboxdir:,kickstart:
script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

template_vmname=
linux_iso_path=
guest_additions_path=
host_network_interface=
host_only_network=
vboxdir=
kickstart=

#internal
host_only_network_name=

if ! parsed=$(xec parseargs $long_opts "$@"); then
  echo "$parsed"
  exit 1
fi
eval $(echo -e "$parsed")

echo "checking/generating SSH keys -- the public key will be copied to the VM by the kickstart script"
xec gen-ssh-keyfiles

echo "generating kickstart ISO"
xec gen-kickstart-iso $kickstart
kickstart_iso_path=$DTKBASE/generated/iso/kickstart.iso

if [[ ! -z "$host_only_network" ]]; then
  echo "creating new host only network for $host_only_network"
  host_only_network_name=$($script_dir/get-or-create-hostonly-network $host_only_network)
  echo "host only network: $host_only_network_name"
fi

echo "creating VM"
$script_dir/create-vm --template-vmname=$template_vmname\
  --linux-iso-path=$linux_iso_path\
  --kickstart-iso-path=$kickstart_iso_path\
  --host-network-interface=$host_network_interface\
  --host-only-network-name=$host_only_network_name\
  --vboxdir=$vboxdir

echo "installing guest additions"
$script_dir/install-guest-additions\
 --template-vmname=$template_vmname\
 --guest-additions-path=$guest_additions_path

echo "guest additions installation completed - template VM fully provisioned"
