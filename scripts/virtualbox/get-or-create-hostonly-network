#!/usr/bin/env bash
#
# Creates - or returns the name of - a host only network using the passed octets. The passed octets
# are the left three octets of an IPv4 address. E.g.: 192.168.55.
#
# If there is an existing VirtualBox host only network with these left three octets, its name is
# returned by the script. Otherwise a new host only network with these left three octets is
# created and the new name is returned.
#
# Please note that VirtualBox imposes constraints on the IP addresses you can use for a host
# only network.
#
# Usage:
#   get-or-create-hostonly-network <network octets>
#
# Example:
#   get-or-create-hostonly-network 192.168.55
#

set -e

if [[ "$#" -ne 1 ]]; then
  1>&2 echo "usage: get-or-create-hostonly-network <network-octets>"
  exit 1
fi

# first see if there is already a host only network matching the octets
name=
octets=
while read line; do
  if grep '^Name:' <<<"$line" &> /dev/null; then
    name=$(echo "$line" | awk '{print $2}')
  elif grep '^IPAddress:' <<<"$line" &> /dev/null; then
    octets=$(echo "$line" | awk '{print $2}' | cut -d. -f1-3)
  fi
  if [[ ! -z "$name" ]] && [[ ! -z "$octets" ]]; then
    if [[ "$octets" == "$1" ]]; then
      # a network exists: return network name to caller
      echo "$name"
      exit 0
    else
      name=
      octets=
    fi
  fi
done < <(VBoxManage list hostonlyifs)

# the new host only network name to be generated by VirtualBox that will be returned to the caller
netname=

# the progress line goes to stderr and the cmd output goes to stdout but mask stderr so all the caller sees is
# the net name created by vbox
output=$(VBoxManage hostonlyif create 2>/dev/null)

# parse the created network name
regex="Interface '([0-9a-z]+)' was successfully created"
[[ $output =~ $regex ]] && netname="${BASH_REMATCH[1]}"

# set the static network address
VBoxManage hostonlyif ipconfig $netname --ip $1.1 --netmask 255.255.255.0

# return newly created network name to caller
echo $netname
