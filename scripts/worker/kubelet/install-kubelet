#!/usr/bin/env bash
#
# Installs kubelet.
#

set -e

long_opts=priv-key:,controller-ip:,worker-ip:,worker-hostname:,kubelet-binary:,ca-cert:,ca-key:
script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

priv_key=
controller_ip=
worker_ip=
worker_hostname=
kubelet_binary=
ca_cert=
ca_key=

if ! parsed=$(xec parseargs $long_opts "$@"); then
  echo "$parsed"
  exit 1
fi
eval $(echo -e "$parsed")

xec gen-certs-kubeconfig\
  --host-name=$worker_hostname\
  --host-ip=$worker_ip\
  --subject-org=system:nodes\
  --subject-cn=system:node:$worker_hostname\
  --identity=kubelet-$worker_hostname\
  --csr-type=altnames\
  --controller-ip=$controller_ip\
  --ca-cert=$ca_cert\
  --ca-key=$ca_key

echo "Copying kubelet files to worker VM"

scp -i $priv_key $kubelet_binary root@$worker_ip:/usr/local/bin/kubelet
ssh -i $priv_key root@$worker_ip "mkdir -p /var/lib/kubelet/kubeconfig /var/lib/kubernetes"
scp -i $priv_key $DTKBASE/generated/cert/kubelet-$worker_hostname.pem root@$worker_ip:/var/lib/kubelet/kubelet.pem
scp -i $priv_key $DTKBASE/generated/cert/kubelet-$worker_hostname-key.pem root@$worker_ip:/var/lib/kubelet/kubelet-key.pem
scp -i $priv_key $DTKBASE/generated/kubeconfig/kubelet-$worker_hostname.kubeconfig root@$worker_ip:/var/lib/kubelet/kubeconfig/kubelet.kubeconfig
scp -i $priv_key $ca_cert root@$worker_ip:/var/lib/kubernetes/
scp -i $priv_key $script_dir/kubelet-config.yaml root@$worker_ip:/var/lib/kubelet/
scp -i $priv_key $script_dir/kubelet.service root@$worker_ip:/etc/systemd/system/

echo "Starting kubelet service"
ssh -i "$priv_key" root@$worker_ip "systemctl daemon-reload && systemctl enable --now kubelet"

echo "Verifying kubelet is running"
set +e
for i in {1..10}; do
  ssh -i "$priv_key" root@$worker_ip "systemctl is-active --quiet kubelet" && break
  sleep 1s
done

echo "No errors detected with kubelet installation"
