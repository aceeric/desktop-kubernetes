#!/usr/bin/env bash

# Configures a worker node

set -e

long_opts=controller-ip:,kube-proxy-enabled:,worker-hostname:,priv-key:,admin-kubeconfig:,pod-cidr:,\
containerized-cplane:,config:,ca-cert:,ca-key:,cluster-cidr:,worker-ip:

controller_ip=
kube_proxy_enabled=
worker_hostname=
priv_key=
admin_kubeconfig=
pod_cidr=
containerized_cplane=
config=
ca_cert=
ca_key=
cluster_cidr=
worker_ip=

if ! parsed=$(xec parseargs $long_opts "$@"); then
  echo "$parsed"
  exit 1
fi
eval $(echo -e "$parsed")

echo "making worker VM configuration changes"
ssh -i $priv_key root@$worker_ip << EOF
  [[ -z "$(swapon --show)" ]] || { swapoff -a; sed -i '/ swap /d' /etc/fstab; }
EOF

echo "configuring firewall rules"
xec configure-firewall $worker_ip $priv_key --worker

echo "copying misc. binaries to the worker"
xec install-misc-bins\
 --priv-key=$priv_key\
 --worker-ip=$worker_ip\
 --crictl-binary=$CRICTL_BINARY\
 --runc-binary=$RUNC_BINARY\
 --cni-plugins-binary=$CNI_PLUGINS_BINARY

echo "installing containerd"
xec install-containerd\
 --priv-key=$priv_key\
 --worker-ip=$worker_ip\
 --containerd-binary=$CONTAINERD_BINARY\
 --pod-cidr=$pod_cidr\
 --config=$config

echo "installing the kubelet"
xec install-kubelet\
 --priv-key=$priv_key\
 --controller-ip=$controller_ip\
 --worker-ip=$worker_ip\
 --worker-hostname=$worker_hostname\
 --kubelet-binary=$KUBELET_BINARY\
 --ca-cert=$ca_cert\
 --ca-key=$ca_key

if [[ $kube_proxy_enabled -eq 1 ]]; then
  xec gen-certs-kubeconfig\
    --csr-type=simple\
    --subject-org=system:node-proxier\
    --subject-cn=system:kube-proxy\
    --identity=kube-proxy\
    --controller-ip=$controller_ip\
    --ca-cert=$ca_cert\
    --ca-key=$ca_key

  xec install-kube-proxy\
   --kube-proxy-binary=$KUBE_PROXY_BINARY\
   --priv-key=$priv_key\
   --containerized-cplane=$containerized_cplane\
   --admin-kubeconfig=$admin_kubeconfig\
   --worker-hostname=$worker_hostname\
   --cluster-cidr=$cluster_cidr\
   --worker-ip=$worker_ip
fi
