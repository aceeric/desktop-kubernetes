#!/usr/bin/env bash

# generates 'kube-proxy-key.pem' and 'kube-proxy-key.pem' and then uses those
# to generate kube-proxy.kubeconfig

set -e

long_opts=controller-ip:,ca-cert:,ca-key:

controller_ip=
ca_cert=
ca_key=

if ! parsed=$(xec parseargs $long_opts "$@"); then
  echo "$parsed"
  exit 1
fi
eval $(echo -e "$parsed")

# generate key
openssl genrsa -out $DTKBASE/generated/cert/kube-proxy-key.pem 2048

# generate a CSR conf
tmp_dir=$(mktemp -d)
cat <<EOF > $tmp_dir/kube-proxy-csr.conf
[ req ]
default_bits = 2048
prompt = no
default_md = sha256
distinguished_name = dn

[ dn ]
O = system:node-proxier
CN = system:kube-proxy

[ v3_ext ]
authorityKeyIdentifier=keyid,issuer:always
basicConstraints=CA:FALSE
keyUsage=keyEncipherment,dataEncipherment
extendedKeyUsage=serverAuth,clientAuth
EOF

# create a CSR using the conf from above
openssl req -new -key $DTKBASE/generated/cert/kube-proxy-key.pem\
 -out $tmp_dir/kube-proxy.csr -config $tmp_dir/kube-proxy-csr.conf

# gen certificate using the ca cert and key provided to the script, and the csr from above
openssl x509 -req -in $tmp_dir/kube-proxy.csr -CA $ca_cert -CAkey $ca_key -CAcreateserial\
 -out $DTKBASE/generated/cert/kube-proxy.pem -days 10000 -extensions v3_ext -extfile $tmp_dir/kube-proxy-csr.conf

# cleanup
rm -rf $tmp_dir $DTKBASE/generated/cert/ca.srl

# gen kube-proxy.kubeconfig
rm -f $DTKBASE/generated/kubeconfig/kube-proxy.kubeconfig
kubectl config set-cluster kubernetes \
--certificate-authority=$ca_cert \
--embed-certs=true \
--server=https://$controller_ip:6443 \
--kubeconfig=$DTKBASE/generated/kubeconfig/kube-proxy.kubeconfig

kubectl config set-credentials system:kube-proxy \
--client-certificate=$DTKBASE/generated/cert/kube-proxy.pem \
--client-key=$DTKBASE/generated/cert/kube-proxy-key.pem \
--embed-certs=true \
--kubeconfig=$DTKBASE/generated/kubeconfig/kube-proxy.kubeconfig

kubectl config set-context default \
--cluster=kubernetes \
--user=system:kube-proxy \
--kubeconfig=$DTKBASE/generated/kubeconfig/kube-proxy.kubeconfig

kubectl config use-context default --kubeconfig=$DTKBASE/generated/kubeconfig/kube-proxy.kubeconfig
