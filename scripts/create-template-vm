#!/usr/bin/env bash

#
# Creates a template VM suitable to clone into a controller or worker. Specifically:
#
# 1. generates an SSH file into the 'kickstart' directory to support SSH access to the VM
# 2. generates the kickstart ISO into the 'media' directory from the contents of the 'kickstart' directory
# 3. creates a VM from the passed CentOS ISO and generated kickstart ISO
# 4. installs guest additions from the passed ISO to support other scripts getting the IP address from the VM
#

set -e

long_opts=template-vmname:,centos-iso-download:,centos-iso-path:,\
guest-additions-download:,guest-additions-path:,host-network-interface:,host-only-network:,vboxdir:
script_name=$(basename "$0")
proj_root="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"

# api
template_vmname=
centos_iso_download=
centos_iso_path=
guest_additions_download=
guest_additions_path=
host_network_interface=
host_only_network=
vboxdir=

#internal
host_only_network_name=

function opt_val() {
  opt="$1"
  if [[ "$opt" == =* ]]; then
    echo "${opt:1}"
  else
    echo "$opt"
  fi
}

function parse_args() {
  if [[ "$#" -eq 0 ]]; then
    echo "no args provided"
    exit 1
  fi
  local parsed
  parsed=$(getopt --options "" --longoptions $long_opts -n $script_name -- "$@")
  if [[ "$?" -ne 0 ]]; then
    exit 1
  fi

  eval set -- "$parsed"
  while true; do
    case "$1" in
	    --template-vmname)
        template_vmname=$(opt_val "$2")
        shift 2
        ;;
      --centos-iso-download)
        centos_iso_download=$(opt_val "$2")
        shift 2
        ;;
      --centos-iso-path)
        centos_iso_path=$(opt_val "$2")
        shift 2
        ;;
      --guest-additions-download)
        guest_additions_download=$(opt_val "$2")
        shift 2
        ;;
      --guest-additions-path)
        guest_additions_path=$(opt_val "$2")
        shift 2
        ;;
      --host-network-interface)
        host_network_interface=$(opt_val "$2")
        shift 2
        ;;
      --host-only-network)
        host_only_network=$(opt_val "$2")
        shift 2
        ;;
      --vboxdir)
        vboxdir=$(opt_val "$2")
        shift 2
        ;;
      --)
        shift
        break
        ;;
    esac
  done
}

parse_args "$@"

centos_iso_actual=$($proj_root/scripts/make-download-path\
 --download-url=$centos_iso_download --download-path=$centos_iso_path)

guest_additions_actual=$($proj_root/scripts/make-download-path\
 --download-url=$guest_additions_download --download-path=$guest_additions_path)

# debug
#echo "template_vmname=$template_vmname"
#echo "centos_iso_download=$centos_iso_download"
#echo "centos_iso_path=$centos_iso_path"
#echo "centos_iso_actual=$centos_iso_actual"
#echo "guest_additions_download=$guest_additions_download"
#echo "guest_additions_path=$guest_additions_path"
#echo "guest_additions_actual=$guest_additions_actual"
#echo "host_network_interface=$host_network_interface"
#echo "host_only_network=$host_only_network"
#echo "vboxdir=$vboxdir"

if [[ ! -z "$centos_iso_download" ]]; then
  if [[ ! -f $centos_iso_actual ]]; then
    echo "downloading CentOS ISO"
    $proj_root/scripts/download-obj --url="$centos_iso_download" --dest="$centos_iso_actual"
  fi
else
  echo "skipping download and using provided CentOS ISO"
fi

if [[ ! -z "$guest_additions_download" ]]; then
  if [[ ! -f $guest_additions_actual ]]; then
    echo "downloading guest additions ISO"
    $proj_root/scripts/download-obj --url="$guest_additions_download" --dest="$guest_additions_actual"
  fi
else
  echo "skipping download and using provided Guest Additions ISO"
fi

echo "generating SSH keys -- the public key will be copied to the VM by the kickstart script"
$proj_root/scripts/gen-ssh-keyfiles

echo "generating kickstart ISO"
$proj_root/scripts/gen-kickstart-iso
kickstart_iso_path=$proj_root/media/kickstart.iso

if [[ ! -z "$host_only_network" ]]; then
  echo "creating new host only network for $host_only_network"
  host_only_network_name=$($proj_root/scripts/create-hostonly-network $host_only_network)
  echo "host only network created $host_only_network_name"
fi

echo "creating VM"
$proj_root/scripts/create-vm --template-vmname=$template_vmname\
  --centos-iso-path=$centos_iso_actual\
  --kickstart-iso-path=$kickstart_iso_path\
  --host-network-interface=$host_network_interface\
  --host-only-network-name=$host_only_network_name\
  --vboxdir=$vboxdir

echo "installing guest additions"
$proj_root/scripts/install-guest-additions\
 --template-vmname=$template_vmname\
 --guest-additions-path=$guest_additions_actual

echo "guest additions installation completed - template VM fully provisioned"
