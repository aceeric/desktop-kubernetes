#!/usr/bin/env bash
#
# Checks to see if binaries needed to provision the cluster are downloaded
# the the file system if the script arg is "files". Otherwise does a HEAD
# request on upstreams to see if they are available. Uses environment variables
# defined in the 'artifacts' script in the repo root.
#

if [[ "$1" == "files" ]]; then
  for f in $ALMA8_ISO_FILE\
    $ALMA9_ISO_FILE\
    $CENTOS9_ISO_FILE\
    $CNI_PLUGINS_BINARY\
    $CONTAINERD_BINARY\
    $CRICTL_BINARY\
    $ETCD_GZIP\
    $GUEST_ADDITIONS_ISO_FILE\
    $KUBE_APISERVER_BINARY\
    $KUBE_CONTROLLER_MANAGER_BINARY\
    $KUBELET_BINARY\
    $KUBE_PROXY_BINARY\
    $KUBE_SCHEDULER_BINARY\
    $ROCKY_ISO_FILE\
    $RUNC_BINARY; do
    if ! [[ -f $f ]]; then
      echo "missing: $f" >&2
    else
      echo "OK: $f"
    fi
  done
else
  for f in $ALMA8_ISO_DOWNLOAD\
    $ALMA9_ISO_DOWNLOAD\
    $CENTOS9_ISO_DOWNLOAD\
    $CNI_PLUGINS_DOWNLOAD\
    $CONTAINERD_DOWNLOAD\
    $CRICTL_DOWNLOAD\
    $ETCD_DOWNLOAD\
    $GUEST_ADDITIONS_ISO_DOWNLOAD\
    $KUBE_APISERVER_DOWNLOAD\
    $KUBE_CONTROLLER_MANAGER_DOWNLOAD\
    $KUBELET_DOWNLOAD\
    $KUBE_PROXY_DOWNLOAD\
    $KUBE_SCHEDULER_DOWNLOAD\
    $ROCKY_ISO_DOWNLOAD\
    $RUNC_DOWNLOAD; do
    if ! curl -sL $f -o /dev/null --head --fail; then
      echo "missing: $f" >&2
    else
      echo "OK: $f"
    fi
  done
fi
