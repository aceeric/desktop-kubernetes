#!/usr/bin/env bash
#
# Downloads core cluster components. (Downloads for add-ons like Calico etc. are
# handle by the various add-ons - see: 'scripts/addons'.)
#

set -e
long_opts=create-template:,linux:,virt:

create_template=
linux=
virt=

if ! parsed=$(xec parseargs $long_opts "$@"); then
  echo "$parsed"
  exit 1
fi
eval $(echo -e "$parsed")

if [[ $create_template -eq 1 ]]; then
  if [[ $linux == "alma8" ]]; then
    xec download-obj --url=$ALMA8_ISO_DOWNLOAD --dest=$ALMA8_ISO_FILE
  elif [[ $linux == "alma9" ]]; then
    xec download-obj --url=$ALMA9_ISO_DOWNLOAD --dest=$ALMA9_ISO_FILE
  elif [[ $linux == "centos9" ]]; then
    xec download-obj --url=$CENTOS9_ISO_DOWNLOAD --dest=$CENTOS9_ISO_FILE
  elif [[ $linux == "rocky" ]]; then
    xec download-obj --url=$ROCKY_ISO_DOWNLOAD --dest=$ROCKY_ISO_FILE
  fi
  if [[ $virt == "virtualbox" ]]; then
    xec download-obj --url=$GUEST_ADDITIONS_ISO_DOWNLOAD --dest=$GUEST_ADDITIONS_ISO_FILE
  fi
fi

xec download-obj --url=$CNI_PLUGINS_DOWNLOAD --dest=$CNI_PLUGINS_BINARY
xec download-obj --url=$CONTAINERD_DOWNLOAD --dest=$CONTAINERD_BINARY
xec download-obj --url=$CRICTL_DOWNLOAD --dest=$CRICTL_BINARY
xec download-obj --url=$ETCD_DOWNLOAD --dest=$ETCD_GZIP
xec download-obj --url=$KUBE_APISERVER_DOWNLOAD --dest=$KUBE_APISERVER_BINARY --executable
xec download-obj --url=$KUBE_CONTROLLER_MANAGER_DOWNLOAD --dest=$KUBE_CONTROLLER_MANAGER_BINARY --executable
xec download-obj --url=$KUBELET_DOWNLOAD --dest=$KUBELET_BINARY --executable
xec download-obj --url=$KUBE_PROXY_DOWNLOAD --dest=$KUBE_PROXY_BINARY --executable
xec download-obj --url=$KUBE_SCHEDULER_DOWNLOAD --dest=$KUBE_SCHEDULER_BINARY --executable
xec download-obj --url=$RUNC_DOWNLOAD --dest=$RUNC_BINARY --executable
