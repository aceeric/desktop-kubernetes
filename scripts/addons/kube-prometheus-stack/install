#!/usr/bin/env bash

config=$1

KUBE_PROM_VER=55.5.0

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

url=https://github.com/prometheus-community/helm-charts/releases/download/kube-prometheus-stack-$KUBE_PROM_VER/kube-prometheus-stack-$KUBE_PROM_VER.tgz
tgz=$DTKBASE/binaries/$(basename $url)
xec download-obj --url=$url --dest=$tgz

admin_kubeconfig=$(yq .cluster.admin-kubeconfig $config)

etcd_arg=""
scheduler_arg=""
ctrllrmgr_arg=""

endpoint=$(kubectl --kubeconfig $admin_kubeconfig get node  -l node-role.kubernetes.io/controller\
  -o json | jq -r '.items[].status.addresses[] | select(.type=="InternalIP").address')
containerized_cplane=$(yq .k8s.containerized-cplane $config)

# if k8s components are not running as pods then it requires additional helm values

if [[ "$containerized_cplane" != *etcd* && "$containerized_cplane" != all ]]; then
  etcd_arg="--set kubeEtcd.endpoints={$endpoint}"
fi
if [[ "$containerized_cplane" != *kube-scheduler* && "$containerized_cplane" != all ]]; then
  scheduler_arg="--set kubeScheduler.endpoints={$endpoint}"
fi
if [[ "$containerized_cplane" != *kube-controller-manager* && "$containerized_cplane" != all ]]; then
  ctrllrmgr_arg="--set kubeControllerManager.endpoints={$endpoint}"
fi

helm upgrade --install kube-prometheus\
  --namespace kube-prometheus\
  --create-namespace\
  --kubeconfig $admin_kubeconfig\
  $etcd_arg\
  $scheduler_arg\
  $ctrllrmgr_arg\
  --values $script_dir/values.yaml\
  $tgz 
