#!/usr/bin/env bash
#
# Helm-installs calico.
#

config=$1

TIGERA_VER=v3.30.0

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
url=https://github.com/projectcalico/calico/releases/download/$TIGERA_VER/tigera-operator-$TIGERA_VER.tgz
tgz=$DTKBASE/binaries/$(basename $url)
xec download-obj --url=$url --dest=$tgz

priv_key=$(yq .cluster.priv-key $config)
cluster_cidr=$(yq .k8s.cluster-cidr $config)
virt=$(yq .virt $config)
kube_proxy=$(yq .k8s.kube-proxy $config)

controller_ip=
for ((i = 0; i < $(yq '.vms | length' $config); ++i)); do
  vmname=$(yq .vms[$i].name $config)
  vmip=$(xec $virt/get-vm-ip $vmname)
  if [[ $i -eq 0 ]]; then
    controller_ip=$vmip
  fi
  # per https://docs.tigera.io/calico-enterprise/latest/operations/troubleshoot/troubleshooting#configure-networkmanager
  # last eyeballed on 26-May-2025
  scp -i $priv_key $script_dir/calico.conf root@$vmip:/etc/NetworkManager/conf.d/calico.conf
  ssh -i $priv_key root@$vmip "systemctl daemon-reload && systemctl restart NetworkManager"
done

sed "s|CLUSTERCIDR|$cluster_cidr|" $script_dir/values-template.yaml >| $script_dir/values.yaml

admin_kubeconfig=$(yq .cluster.admin-kubeconfig $config)
helm upgrade --install tigera-operator\
  --namespace tigera-operator\
  --create-namespace\
  --kubeconfig $admin_kubeconfig\
  --wait\
  --values $script_dir/values.yaml\
  $tgz

# these steps from https://docs.tigera.io/calico/latest/operations/ebpf/enabling-ebpf to be able
# to run without kube-proxy

cat <<EOF | kubectl --kubeconfig $admin_kubeconfig --namespace tigera-operator apply -f -
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubernetes-services-endpoint
data:
  KUBERNETES_SERVICE_HOST: "$controller_ip"
  KUBERNETES_SERVICE_PORT: "6443"
EOF

# as of v3.30.0 I needed to do this or the install never progressed:
kubectl --kubeconfig $admin_kubeconfig -n tigera-operator\
  rollout restart deploy/tigera-operator

if [[ $kube_proxy != "false" ]]; then
  while ! kubectl --kubeconfig $admin_kubeconfig\
    patch felixconfiguration default --type=merge --patch='{"spec":{"bpfEnabled":true}}'; do 
      sleep 5s
  done
fi

# Enable eBPF mode
kubectl --kubeconfig $admin_kubeconfig\
  patch installation.operator.tigera.io default\
  --type merge -p '{"spec":{"calicoNetwork":{"linuxDataplane":"BPF"}}}'

echo "waiting (indefinitely) for calico daemonset"
while true; do
  if kubectl --kubeconfig $admin_kubeconfig -n calico-system rollout status ds calico-node; then
    break
  fi
  sleep 10s
done
