#!/usr/bin/env bash

# Creates a clone VM from the passed template VM. The cloned VM will have the passed
# characteristics (VM name, mem, disk size). Unless shutdown=false, the VM will be shut down after it
# is created. The host name of the VM will be set to the same value as the VM name.

set -e

long_opts=priv-key:,template-vmname:,clone-vmname:,clone-ram:,clone-cpus:,clone-disk:,vboxdir:,shutdown:
script_name=$(basename "$0")
proj_root="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"

priv_key=
template_vmname=
clone_vmname=
clone_ram=
clone_cpus=
clone_disk=
vboxdir=
shutdown=true

function opt_val() {
  opt="$1"
  if [[ "$opt" == =* ]]; then
    echo "${opt:1}"
  else
    echo "$opt"
  fi
}

function parse_args() {
  if [[ "$#" -eq 0 ]]; then
    echo "no args provided"
    exit 1
  fi
  local parsed
  parsed=$(getopt --options "" --longoptions $long_opts -n $script_name -- "$@")
  eval set -- "$parsed"
  while true; do
    case "$1" in
      --priv-key)
        priv_key=$(opt_val "$2")
        shift 2
        ;;
	    --template-vmname)
        template_vmname=$(opt_val "$2")
        shift 2
        ;;
      --clone-vmname)
        clone_vmname=$(opt_val "$2")
        shift 2
        ;;
      --clone-ram)
        clone_ram=$(opt_val "$2")
        shift 2
        ;;
      --clone-cpus)
        clone_cpus=$(opt_val "$2")
        shift 2
        ;;
      --clone-disk)
        clone_disk=$(opt_val "$2")
        shift 2
        ;;
      --vboxdir)
        vboxdir=$(opt_val "$2")
        shift 2
        ;;
      --shutdown)
        shutdown=$(opt_val "$2")
        shift 2
        ;;
      --)
        shift
        break
        ;;
    esac
  done
}

parse_args "$@"

# debug
#echo "priv_key=$priv_key"
#echo "template_vmname=$template_vmname"
#echo "clone_vmname=$clone_vmname"
#echo "clone_ram=$clone_ram"
#echo "clone_cpus=$clone_cpus"
#echo "clone_disk=$clone_disk"
#echo "vboxdir=$vboxdir"

echo "cloning VM \"$clone_vmname\" from template VM \"$template_vmname\""
VBoxManage clonevm $template_vmname\
 --basefolder="$vboxdir"\
 --mode=machine\
 --name=$clone_vmname\
 --register

echo "setting VM characteristics"
VBoxManage modifyvm $clone_vmname\
 --cpus $clone_cpus\
 --memory $clone_ram

#VBoxManage modifymedium disk $vboxdir/$clone_vmname/$clone_vmname.vdi --resize $clone_disk

echo "starting cloned VM"
VBoxManage startvm $clone_vmname

echo "getting IP address from cloned VM"
clone_ip=$($proj_root/scripts/get-vm-ip $clone_vmname)

echo "changing the hostname for cloned VM"
ssh -o "StrictHostKeyChecking no" -i $priv_key root@$clone_ip "hostnamectl set-hostname $clone_vmname"

if [[ $shutdown == true ]]; then
  echo "shutting down cloned VM"
  VBoxManage controlvm $clone_vmname acpipowerbutton
  $proj_root/scripts/wait-vm $clone_vmname --stopped
  # virtual box needs a moment or subsequent vboxmanage commands seem to intermittently error
  sleep 5s
fi

echo "done cloning \"$clone_vmname\""
