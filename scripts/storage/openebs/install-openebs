#!/usr/bin/env bash

set -e

long_opts=priv-key:,admin-kubeconfig:,openebs-hostpath-operator-manifest:,openebs-sc-manifest:
script_name=$(basename "$0")

priv_key=
admin_kubeconfig=
openebs_hostpath_operator_manifest=
openebs_sc_manifest=

function opt_val() {
  opt="$1"
  if [[ "$opt" == =* ]]; then
    echo "${opt:1}"
  else
    echo "$opt"
  fi
}

function parse_args() {
  if [[ "$#" -eq 0 ]]; then
    echo "no args provided"
    exit 1
  fi
  local parsed
  parsed=$(getopt --options "" --longoptions $long_opts -n $script_name -- "$@")
  eval set -- "$parsed"
  while true; do
    case "$1" in
      --priv-key)
        priv_key=$(opt_val "$2")
        shift 2
        ;;
      --admin-kubeconfig)
        admin_kubeconfig=$(opt_val "$2")
        shift 2
        ;;
      --openebs-hostpath-operator-manifest)
        openebs_hostpath_operator_manifest=$(opt_val "$2")
        shift 2
        ;;
      --openebs-sc-manifest)
        openebs_sc_manifest=$(opt_val "$2")
        shift 2
        ;;
      --)
        shift
        break
        ;;
    esac
  done
}

parse_args "$@"

echo "installing the OpenEBS Hostpath Operator, and associated storage classes"

echo "deploying the openEBS hostpath operator"
kubectl --kubeconfig $admin_kubeconfig apply -f $openebs_hostpath_operator_manifest
sleep 2s
kubectl --kubeconfig $admin_kubeconfig -n openebs wait po -lopenebs.io/component-name=openebs-localpv-provisioner\
  --for condition=ready --timeout=10m

echo "creating openEBS storage classes"
kubectl --kubeconfig $admin_kubeconfig apply -f $openebs_sc_manifest
count=$(kubectl --kubeconfig $admin_kubeconfig get sc -ocustom-columns=provisioner:provisioner\
        --no-headers | grep 'openebs.io/local' | wc -l)

if [[ $count -ne 2 ]]; then
  echo "error - openEBS storage classes did not deploy"
  exit 1
fi

echo "Making openebs-hostpath the default storage class for the cluster"
kubectl --kubeconfig $admin_kubeconfig annotate sc openebs-hostpath storageclass.kubernetes.io/is-default-class="true"

echo "no errors detected with openEBS installation"
