#!/usr/bin/env bash

set -e

long_opts=priv-key:,template-vmname:,clone-vmname:,clone-ram:,clone-cpus:,clone-disk:

priv_key=
template_vmname=
clone_vmname=
clone_ram=
clone_cpus=
clone_disk=

if ! parsed=$(xec parseargs $long_opts "$@"); then
  echo "$parsed"
  exit 1
fi
eval $(echo -e "$parsed")

echo "getting directory of template"
dir=$(virsh domblklist $template_vmname | grep vda | awk '{print $2}')
dir=${dir%/*}

echo "cloning VM"
virt-clone\
  --original=$template_vmname\
  --name=$clone_vmname\
  --file=$dir/$clone_vmname.qcow2\
  --mac=RANDOM

virsh setvcpus  $clone_vmname $clone_cpus --config --maximum
virsh setvcpus  $clone_vmname $clone_cpus --config
virsh setmaxmem $clone_vmname "$clone_ram"M
virsh setmem    $clone_vmname "$clone_ram"M  --config

echo "starting VM"
virsh start $clone_vmname

# can only resize a running VM
if [[ -n $clone_disk ]]; then
  echo "resizing disk vda to $clone_disk gigs"
  img=$(virsh domblklist $clone_vmname | grep vda | awk '{print $2}')
  virsh blockresize $clone_vmname $img ${clone_disk}GiB
fi

echo "setting the hostname for cloned VM"
clone_ip=$(xec kvm/get-vm-ip $clone_vmname)
ssh-keygen -f ~/.ssh/known_hosts -R $clone_ip
ssh -o "StrictHostKeyChecking no" -i $priv_key root@$clone_ip "hostnamectl set-hostname $clone_vmname"

if [[ -n $clone_disk ]]; then
  echo "resizing partition 3 on /dev/vda"
  ssh -i $priv_key root@$clone_ip "growpart /dev/vda 3 && xfs_growfs /"
fi

echo "done cloning \"$clone_vmname\""
