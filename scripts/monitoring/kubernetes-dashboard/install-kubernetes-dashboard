#!/usr/bin/env bash

set -e

long_opts=controller-ip:,admin-kubeconfig:,kubernetes-dashboard-download:,kubernetes-dashboard-manifest:
script_name=$(basename "$0")

controller_ip=
admin_kubeconfig=
kubernetes_dashboard_download=
kubernetes_dashboard_manifest=

function opt_val() {
  opt="$1"
  if [[ "$opt" == =* ]]; then
    echo "${opt:1}"
  else
    echo "$opt"
  fi
}

function parse_args() {
  if [[ "$#" -eq 0 ]]; then
    echo "no args provided"
    exit 1
  fi
  local parsed
  parsed=$(getopt --options "" --longoptions $long_opts -n $script_name -- "$@")
  eval set -- "$parsed"
  while true; do
    case "$1" in
	    --controller-ip)
        controller_ip=$(opt_val "$2")
        shift 2
        ;;
      --admin-kubeconfig)
        admin_kubeconfig=$(opt_val "$2")
        shift 2
        ;;
      --kubernetes-dashboard-download)
        kubernetes_dashboard_download=$(opt_val "$2")
        shift 2
        ;;
      --kubernetes-dashboard-manifest)
        kubernetes_dashboard_manifest=$(opt_val "$2")
        shift 2
        ;;
      --)
        shift
        break
        ;;
    esac
  done
}

parse_args "$@"

kubernetes_dashboard_actual=$(xec make-download-path\
 --download-url=$kubernetes_dashboard_download --download-path=$kubernetes_dashboard_manifest)

# debug
#echo "admin_kubeconfig=$admin_kubeconfig"
#echo "controller_ip=$controller_ip"
#echo "kubernetes_dashboard_download=$kubernetes_dashboard_download"
#echo "kubernetes_dashboard_manifest=$kubernetes_dashboard_manifest"
#echo "kubernetes_dashboard_actual=$kubernetes_dashboard_actual"

xec download-obj --url="$kubernetes_dashboard_download" --dest="$kubernetes_dashboard_actual"

echo "installing kubernetes dashboard"
kubectl --kubeconfig $admin_kubeconfig apply -f $kubernetes_dashboard_actual

cat <<EOF | kubectl --kubeconfig $admin_kubeconfig create -f -
apiVersion: v1
kind: Service
metadata:
  name: kubernetes-dashboard-nodeport
  namespace: kubernetes-dashboard
spec:
  type: NodePort
  ports:
  - port: 8443
    targetPort: 8443
    nodePort: 30443
  selector:
    k8s-app: kubernetes-dashboard
EOF

echo "configuring access for kubernetes dashboard"

kubectl --kubeconfig $admin_kubeconfig -n kubernetes-dashboard create serviceaccount admin-user
kubectl --kubeconfig $admin_kubeconfig create clusterrolebinding kubernetes-dashboard-admin-user\
        --clusterrole=cluster-admin --serviceaccount=kubernetes-dashboard:admin-user

TOKEN=$(kubectl -n kubernetes-dashboard --kubeconfig $admin_kubeconfig create token admin-user)

echo
echo "finished installing Kubernetes Dashboard. Use this token to access the dashboard:"
echo "$TOKEN"
echo
echo "Use this command to get the dashboard token in the future: 'kubectl -n kubernetes-dashboard create token admin-user'"
echo "A NodePort service has been created to access the dashboard. Use this URL to access the dashboard:"
echo "https://$controller_ip:30443"
