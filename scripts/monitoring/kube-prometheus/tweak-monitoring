#!/usr/bin/env bash
#
# The kube prometheus stack wants to monitor kube-controller-manager and kube-scheduler as
# Pods. If we run those as systemd units we have to do some additional work to get prometheus
# to scrape those two components. Also create resources to monitor kube-proxy which kube-prometheus
# does not seem to include a monitor for at present.
#
# Usage:
#
# tweak-monitoring <vm names comma-separated list> <path to admin kubeconfig>
#
# The first VM in the list is considered to be the control plane VM. All VMs are considered as workers.
#
# E.g.:
#
# tweak-monitoring peter,paul,mary ./generated/kubeconfig/admin.kubeconfig
#

set -e

controller_ip=
worker_ips=
script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
admin_kubeconfig=$2

IFS=',' read -ra node_array <<< "$1"
for node in "${node_array[@]}"; do
  ipaddr=$(xec get-vm-ip $node)
  if [[ -z $controller_ip ]]; then
    controller_ip="  - ip: $ipaddr"
  fi
  if [[ ! -z $worker_ips ]]; then
    worker_ips="$worker_ips\n"
  fi
  worker_ips="$worker_ips  - ip: $ipaddr"
done

sed -e "s/CONTROLLER/$controller_ip/g" -e "s/WORKERS/$worker_ips/g" $script_dir/manifests.yaml\
  | kubectl --kubeconfig $admin_kubeconfig apply -f -

echo "waiting (indefinitely) for servicemonitor/kube-controller-manager in monitoring namespace"
while true; do
  kubectl --kubeconfig $admin_kubeconfig -n monitoring get servicemonitor kube-controller-manager &>/dev/null && break || sleep 5s
done

kubectl --kubeconfig $admin_kubeconfig -n monitoring patch servicemonitor kube-controller-manager --type='json'\
  -p='[{"op": "replace", "path": "/spec/endpoints/0/port", "value": "http-metrics"}]'

kubectl --kubeconfig $admin_kubeconfig -n monitoring patch servicemonitor kube-controller-manager --type='json'\
  -p='[{"op": "add", "path": "/spec/endpoints/0/tlsConfig/serverName", "value":"localhost"}]'

echo "waiting (indefinitely) for servicemonitor/kube-scheduler in monitoring namespace"
while true; do
  kubectl --kubeconfig $admin_kubeconfig -n monitoring get servicemonitor kube-scheduler &>/dev/null && break || sleep 5s
done

kubectl --kubeconfig $admin_kubeconfig -n monitoring patch servicemonitor kube-scheduler --type='json'\
  -p='[{"op": "replace", "path": "/spec/endpoints/0/port", "value": "http-metrics"}]'

kubectl --kubeconfig $admin_kubeconfig -n monitoring patch servicemonitor kube-scheduler --type='json'\
  -p='[{"op": "add", "path": "/spec/endpoints/0/tlsConfig/serverName", "value":"localhost"}]'
