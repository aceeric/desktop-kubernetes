#!/usr/bin/env bash

# installs the kube-controller-manager.

set -e

long_opts=priv-key:,controller-ip:,controller-hostname:,kube-controller-manager-binary:,\
containerized-cplane:,admin-kubeconfig:,ca-cert:,ca-key:,cluster-cidr:
script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

priv_key=
controller_ip=
controller_hostname=
kube_controller_manager_binary=
containerize_cplane=0
admin_kubeconfig=
ca_cert=
ca_key=
cluster_cidr=

if ! parsed=$(xec parseargs $long_opts "$@"); then
  echo "$parsed"
  exit 1
fi
eval $(echo -e "$parsed")

if [[ "$containerized_cplane" == *kube-controller-manager* || "$containerized_cplane" == all ]]; then
  containerized_cplane=1
fi

xec gen-kubeconfig\
  --subject-cn=system:kube-controller-manager\
  --kubeconfig-name=kube-controller-manager\
  --controller-ip=$controller_ip\
  --ca-cert=$ca_cert\
  --ca-key=$ca_key

echo "copying kube-controller-manager kubeconfig file to controller VM"
scp -i $priv_key $DTKBASE/generated/kubeconfig/kube-controller-manager.kubeconfig root@$controller_ip:/var/lib/kubernetes/

if [[ $containerized_cplane -eq 0 ]]; then
  echo "copying kube-controller-manager binary to controller VM"
  scp -i $priv_key $kube_controller_manager_binary root@$controller_ip:/usr/local/bin/kube-controller-manager

  echo "copying kube-controller-manager service file to controller VM"
  sed $script_dir/kube-controller-manager.service -e "s|CLUSTER_CIDR|$cluster_cidr|g"\
    | ssh -i $priv_key root@$controller_ip "cat > /etc/systemd/system/kube-controller-manager.service"
  
  echo "starting kube-controller-manager service"
  ssh -i "$priv_key" root@$controller_ip\
   "systemctl daemon-reload && systemctl enable --now kube-controller-manager"
  exit
  
  echo "verifying kube-controller-manager is running"
  set +e
  for i in {1..10}; do
    ssh -i "$priv_key" root@$controller_ip "systemctl is-active --quiet kube-controller-manager" && break
    sleep 1s
  done
else
  echo "copying kube-controller-manager static pod manifest to controller VM"
  sed $script_dir/kube-controller-manager-pod.yaml -e "s|K8S_VER|$K8S_VER|g" -e "s|CLUSTER_CIDR|$cluster_cidr|g"\
    | ssh -i $priv_key root@$controller_ip "cat > /etc/desktop-kubernetes/static-pods/kube-controller-manager-pod.yaml"
  for i in {1..20}; do
    if kubectl --kubeconfig $admin_kubeconfig -n kube-system wait pod\
      -lcomponent=kube-controller-manager --for=condition=ready --timeout=5s; then
      break
    elif [[ $i -eq 20 ]]; then
      echo "Can't verify kube-scheduler installation"
      exit 1
    fi
    sleep 5s
  done
fi

echo "no errors detected with kube-controller-manager installation"
